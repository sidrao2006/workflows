name: Desktop Integration Test
on:
  workflow_call:
    inputs:
      dir:
        required: false
        type: string
        default: '.'
      environment:
        required: false
        type: string
      test_filename:
        required: true
        type: string
      coverage:
        required: false
        type: boolean
        default: true
    secrets:
      args:
        required: false
      codecov_token:
        required: false

jobs:
  desktop_integration_test:
    name: ${{ matrix.name }} Integration Test
    environment: ${{ inputs.environment }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            name: Linux (Ubuntu)
            flutter_os: linux

          - os: windows-latest
            name: Windows
            flutter_os: windows

          - os: macos-latest
            name: MacOS
            flutter_os: macos

    defaults:
      run:
        working-directory: ${{ inputs.dir }}
        shell: pwsh

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: beta

      - name: Configure Flutter platforms
        run: flutter config --enable-${{ matrix.flutter_os }}-desktop

      - name: Setup Linux Environment
        if: ${{ matrix.os == 'ubuntu-latest' }}
        # Remaining dependencies are pre-installed
        run: |
          sudo apt-get update
          sudo apt-get -y --no-install-recommends install `
          libgtk-3-dev `
          liblzma-dev `
          ninja-build `
          xvfb

      - name: Run Integration Tests
        env:
          OS: ${{ matrix.os }}
        run: |
         if ( "$env:OS" -eq "ubuntu-latest" ) { Xvfb -ac :99 &; $env:DISPLAY=":99" }

         flutter test `
           --device-id ${{ matrix.flutter_os }} `
           ./integration_test/${{ inputs.test_filename }} ${{ secrets.args }}

      - name: Codecov Test Coverage
        if: ${{ inputs.coverage && matrix.flutter_os == 'linux' }}
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.codecov_token }}
          file: ${{ inputs.dir }}/coverage/lcov.info
          flags: integration
